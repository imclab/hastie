#!/usr/bin/env ruby
# -*- mode: ruby -*-

# require 'rubygems'
# puts Gem.loaded_specs["jekyll"].bindir

require 'hastie'

module Hastie
  module Executable
    HELP = <<-HELP
Usage: hastie [ command ] <command-options>

Hastie Commands:
  version - Print version number and exit
  help    - Print this help and exit
  start   - Create new report directory framework with given name
  watch   - Monitor current directory for changes.
            Updates local copy of report
  publish - Send report to server. Update published reports
  config  - Create new hastie config file for communicating with server
  server_start - Create new server directory framework with given name

Hastie start options:
  Use 'hastie start -h' for more information on start options

Hastie publish options:
  Use 'hastie publish -h' for more information on publish options

Hastie server_start options:
  Use 'hastie server_start -h' for more information on publish options

    HELP

    def self.execute(command, args)
      case command
      when "version"
        require 'hastie/version'
        puts Hastie::VERSION
      when "start","create"
        Hastie::ReportGenerator.start ARGV
      when "watch", "monitor"
        puts "Starting Jekyll..."
        system("jekyll --auto --server")
      when "publish"
        Hastie::ReportPublisher.start ARGV
      when "config"
        Hastie::ConfigGenerator.start ARGV
      when "server_start"
        Hastie::ServerGenerator.start ARGV
      else
        puts Hastie::Executable::HELP
      end
    end
  end
end

command = ARGV.shift
Hastie::Executable.execute command, ARGV
